generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL") // Define in .env
}

enum SystemRole {
  SUPERADMIN
  ADMIN
  USER
}

model Permission {
  id          String   @id @default(uuid())
  name        String   @unique
  description String
  isDeleted   Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  deletedAt   DateTime? @db.Timestamp(0)
}

model Role {
  id            String   @id @default(uuid())
  name          String   @unique
  description   String
  permissionIds String[]
  isDeleted     Boolean  @default(false)
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  deletedAt     DateTime? @db.Timestamp(0)
}

model User {
  id           String     @id @default(uuid())
  username     String     @unique
  password     String
  email        String     @unique
  role         SystemRole @default(USER)
  roleIds      String[]
  isActive     Boolean    @default(true)
  isDeleted    Boolean    @default(false)
  createdAt    DateTime   @default(now()) @db.Timestamp
  updatedAt    DateTime   @updatedAt @db.Timestamp
  deletedAt    DateTime?  @db.Timestamp(0)
}

model CustomFields {
  id           String   @id @default(uuid())
  industry     String
  size         String
  config       Config?  @relation(fields: [configId], references: [id])
  configId     String?  @unique
}

model Config {
  id            String       @id @default(uuid())
  modules       String[]
  customFields  CustomFields?
  tenant        Tenant?      @relation(fields: [tenantId], references: [id])
  tenantId      String?      @unique
}

model Tenant {
  id           String    @id @default(uuid())
  status       String
  isDeleted    Boolean   @default(false)
  config       Config?
  name         String
  subdomain    String
  contactEmail String
  createdAt    DateTime  @default(now()) @db.Timestamp
  updatedAt    DateTime  @updatedAt @db.Timestamp
  deletedAt    DateTime? @db.Timestamp(0)
}